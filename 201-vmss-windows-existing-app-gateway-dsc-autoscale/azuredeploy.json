{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmSku": {
            "defaultValue": "Standard_A1",
            "type": "String",
            "metadata": {
                "description": "Size of VMs in the VM Scale Set."
            }
        },
        "windowsOSVersion": {
            "defaultValue": "2016-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter",
                "2016-Datacenter"
            ],
            "type": "String",
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
            }
        },
        "vmssName": {
            "maxLength": 57,
            "type": "String",
            "metadata": {
                "description": "String used as a base for naming resources. Must be 3-57 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
            }
        },
        "instanceCount": {
            "maxValue": 1000,
            "type": "Int",
            "metadata": {
                "description": "Number of VM instances (1000 or less)."
            }
        },
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Admin password on all VMs."
            }
        },
        "_artifactsLocation": {
            "defaultValue": "https://raw.githubusercontent.com/dannybritto96/AzureDSC/master",
            "type": "String",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. For example, if stored on a public GitHub repo, you'd use the following URI: https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-webapp-dsc-autoscale."
            }
        },
        "_artifactsLocationSasToken": {
            "defaultValue": "",
            "type": "SecureString",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  If your artifacts are stored on a public repo or public storage account you can leave this blank."
            }
        },
        "powershelldscZip": {
            "defaultValue": "/IISInstall.zip",
            "type": "String",
            "metadata": {
                "description": "Location of the PowerShell DSC zip file relative to the URI specified in the _artifactsLocation, i.e. /DSC/IISInstall.ps1.zip"
            }
        },
        "webDeployPackage": {
            "defaultValue": "/WebApplication1.zip",
            "type": "String",
            "metadata": {
                "description": "Location of the  of the WebDeploy package zip file relative to the URI specified in _artifactsLocation, i.e. /WebDeploy/DefaultASPWebApp.v1.0.zip"
            }
        },
        "powershelldscUpdateTagVersion": {
            "defaultValue": "1.0",
            "type": "String",
            "metadata": {
                "description": "Version number of the DSC deployment. Changing this value on subsequent deployments will trigger the extension to run."
            }
        },
        "existingVirtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
              "description": "The name of the Resource Group which contains the existing Virtual Network that this VM Scale Set will be connected to."
            }
        },
        "existingVirtualNetworkName": {
            "type": "string",
            "metadata": {
              "description": "The name of the existing Virtual Network that this VM Scale Set will be connected to."
            }
        },
        "existingVirtualNetworkSubnet": {
            "type": "string",
            "metadata": {
              "description": "The name of the existing subnet that this VM Scale Set will be connected to."
            }
        },
        "existingAppGatewayResourceGroup": {
            "type": "string",
            "metadata": {
              "description": "The name of the Resource Group which contains the existing Application Gateway that will load-balance the instances of this VM Scale Set."
            }
        },
        "existingAppGatewayName": {
            "type": "string",
            "metadata": {
              "description": "The name of the existing Application Gateway that will load-balance the instances of this VM Scale Set."
            }
        },
        "existingAppGatewayBackendPoolName": {
            "type": "string",
            "metadata": {
              "description": "The name of the Backend Pool in the existing Application Gateway that will load-balance the instances of this VM Scale Set."
            },
            "defaultValue": "appGatewayBackendPool"
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
        },
        "subnetId": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'), parameters('existingVirtualNetworkSubnet'))]",
        "appGwId": "[resourceId(parameters('existingAppGatewayResourceGroup'), 'Microsoft.Network/applicationGateways', parameters('existingAppGatewayName'))]",
        "appGwBePoolId": "[concat(variables('appGwId'), '/backendAddressPools/', parameters('existingAppGatewayBackendPoolName'))]",
        "appGwBePoolName": "[concat(variables('namingInfix'), 'appGwBepool')]",
        "webDeployPackageFullPath": "[concat(parameters('_artifactsLocation'), parameters('webDeployPackage'))]",
        "powershelldscZipFullPath": "[concat(parameters('_artifactsLocation'), parameters('powershelldscZip'))]",
        "powershelldscArchiveFileName": "IISInstall.zip"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "sku": {
                "name": "[parameters('vmSku')]",
                "tier": "Standard",
                "capacity": "[parameters('instanceCount')]"
            },
            "name": "[variables('namingInfix')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "overprovision": "true",
                "singlePlacementGroup": "false",
                "upgradePolicy": {
                    "mode": "Automatic"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "caching": "ReadWrite",
                            "createOption": "FromImage"
                        },
                        "dataDisks": [],
                        "imageReference": "[variables('imageReference')]"
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                          {
                            "name": "nic",
                            "properties": {
                              "primary": true,
                              "ipConfigurations": [
                                {
                                  "name": "ipconfig",
                                  "properties": {
                                    "subnet": {
                                      "id": "[variables('subnetId')]"
                                    },
                                    "ApplicationGatewayBackendAddressPools": [
                                      {
                                        "id": "[variables('appGwBePoolId')]"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "Microsoft.Powershell.DSC",
                                "properties": {
                                    "publisher": "Microsoft.Powershell",
                                    "type": "DSC",
                                    "typeHandlerVersion": "2.9",
                                    "autoUpgradeMinorVersion": true,
                                    "forceUpdateTag": "[parameters('powershelldscUpdateTagVersion')]",
                                    "settings": {
                                        "configuration": {
                                            "url": "[variables('powershelldscZipFullPath')]",
                                            "script": "IISInstall.ps1",
                                            "function": "InstallIIS"
                                        },
                                        "configurationArguments": {
                                            "nodeName": "localhost",
                                            "WebDeployPackagePath": "[variables('webDeployPackageFullPath')]"
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.Insights/autoscaleSettings",
            "name": "autoscalehost",
            "apiVersion": "2015-04-01",
            "location": "[parameters('location')]",
            "properties": {
                "name": "autoscalehost",
                "targetResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
                "enabled": true,
                "profiles": [
                    {
                        "name": "Profile1",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "3",
                            "default": "1"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 50
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT5M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "Percentage CPU",
                                    "metricNamespace": "",
                                    "metricResourceUri": "[concat('/subscriptions/',subscription().subscriptionId, '/resourceGroups/',  resourceGroup().name, '/providers/Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT5M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 30
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT5M"
                                }
                            }
                        ]
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachineScaleSets/', variables('namingInfix'))]"
            ]
        }
    ]
}
